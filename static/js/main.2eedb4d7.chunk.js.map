{"version":3,"sources":["redux/actions.js","components/Header.js","components/Footer.js","components/Report/Breadcrumbs.js","components/Report/Description.js","components/Report/StatsPeople.js","components/Report/StatsFinancial.js","components/Report/StatsCopying.js","components/Report.js","components/ReportsTable.js","app.js","serviceWorker.js","redux/reducers.js","index.js","redux/store.js"],"names":["fetchReportsIfNeeded","dispatch","getState","reports","isFetching","a","type","fetch","response","json","receiveReports","Header","Layout","AppHeader","className","span","to","FundProjectionScreenOutlined","Footer","AppFooter","Breadcrumbs","report","Item","kopuk","territory","Description","bordered","label","fullname","address","formname","libraries","period","StatsPeople","title","value","subscribers","prefix","employees_staff","suffix","employees","users_children","users","buildings_management","StatsFinancial","gutter","funds_used","funds","funds_acquisition","funds_budget","funds_entrepreneurial","StatsCopying","bodyStyle","display","textAlign","style","width","copies","copies_issued","height","copies_issued_children","copies_electronic","Report","id","useParams","useSelector","state","items","find","item","Reports","props","useDispatch","columns","SearchOutlined","onChange","e","filter","setFilter","target","placeholder","dataIndex","key","render","text","record","defaultSortOrder","sorter","b","align","size","pagination","pageSizeOptions","showSizeChanger","showTotal","total","dataSource","rowKey","App","useEffect","i","toLowerCase","indexOf","Content","exact","path","children","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","Object","assign","preloadedState","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","locale","ruRU","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2eedb4d7.chunk.js","sourcesContent":["export const REQUEST_REPORTS = \"REQUEST_REPORTS\";\r\nexport const RECEIVE_REPORTS = \"RECEIVE_REPORTS\";\r\nexport const REGION_FILTER = \"REGION_FILTER\";\r\n\r\nexport function setFilter(filter) {\r\n  return {\r\n    type: REGION_FILTER,\r\n    filter,\r\n  };\r\n}\r\n\r\nexport function fetchReportsIfNeeded() {\r\n  return (dispatch, getState) => {\r\n    if (shouldFetchReports(getState())) {\r\n      return dispatch(fetchReports());\r\n    }\r\n  };\r\n}\r\n\r\nfunction fetchReports() {\r\n  return async (dispatch) => {\r\n    dispatch(requestReports());\r\n    const response = await fetch(\r\n      \"/opendata/7705851331-stat_library/data-2016-11-10T00-00-00-structure-2016-09-12T00-00-00.json\"\r\n    );\r\n    const json = await response.json();\r\n    return dispatch(receiveReports(json));\r\n  };\r\n}\r\n\r\nfunction shouldFetchReports(state) {\r\n  return !state.reports.isFetching;\r\n}\r\n\r\nfunction requestReports() {\r\n  return {\r\n    type: REQUEST_REPORTS,\r\n  };\r\n}\r\n\r\nfunction receiveReports(json) {\r\n  return {\r\n    type: RECEIVE_REPORTS,\r\n    reports: json,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Layout, Row, Col } from \"antd\";\r\nimport { FundProjectionScreenOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Header } = Layout;\r\nexport const AppHeader = () => (\r\n  <Header className=\"app-header\">\r\n    <Row>\r\n      <Col span={24}>\r\n        <Link to=\"/\">\r\n          <FundProjectionScreenOutlined /> Библиотеки РФ. Статистическая\r\n          информация\r\n        </Link>\r\n      </Col>\r\n    </Row>\r\n  </Header>\r\n);\r\n","import React from \"react\";\r\nimport { Layout, Divider } from \"antd\";\r\n\r\nconst { Footer } = Layout;\r\nexport const AppFooter = () => (\r\n  <Footer className=\"app-footer\">\r\n    <Divider />© 2020 г. Вся информация представлена в демонстрационных целях.\r\n  </Footer>\r\n);\r\n","import { Breadcrumb } from \"antd\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Breadcrumbs = ({ report }) => (\r\n  <Breadcrumb>\r\n    <Breadcrumb.Item>\r\n      <Link to=\"/\">Данные по регионам</Link>\r\n    </Breadcrumb.Item>\r\n    <Breadcrumb.Item>\r\n      <Link to={`/reports/${report.kopuk}`}>{report.territory}</Link>\r\n    </Breadcrumb.Item>\r\n  </Breadcrumb>\r\n);\r\n","import React from \"react\";\r\nimport { Descriptions, Divider } from \"antd\";\r\n\r\nexport const Description = ({ report }) => (\r\n  <>\r\n    <Divider>\r\n      <h1>{report.territory}</h1>\r\n    </Divider>\r\n    <Descriptions bordered>\r\n      <Descriptions.Item span={3} label=\"Отчетная организация\">\r\n        {report.fullname}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item span={3} label=\"Адрес\">\r\n        {report.address}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item span={3} label=\"Источник данных\">\r\n        {report.formname}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"Количество библиотек\">\r\n        {report.libraries}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"Классификатор организаций, предприятий и учреждений культуры\">\r\n        {report.kopuk}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"Период\">{report.period}</Descriptions.Item>\r\n    </Descriptions>\r\n  </>\r\n);\r\n","import { Row, Col, Statistic, Card, Divider } from \"antd\";\r\nimport React from \"react\";\r\n\r\nexport const StatsPeople = ({ report }) => (\r\n  <div className=\"app-stats-block\">\r\n    <Divider>\r\n      <h3>Статистические данные</h3>\r\n    </Divider>\r\n    <Row>\r\n      <Col span={12}>\r\n        <Card>\r\n          <Statistic title=\"Абонентов\" value={report.subscribers} prefix=\"\" />\r\n        </Card>\r\n      </Col>\r\n      <Col span={12}>\r\n        <Card>\r\n          <Statistic\r\n            title=\"Сотрудников\"\r\n            value={report.employees_staff}\r\n            suffix={`/ ${report.employees}`}\r\n          />\r\n        </Card>\r\n      </Col>\r\n      <Col span={12}>\r\n        <Card>\r\n          <Statistic\r\n            title=\"Детей / Всего пользователей\"\r\n            value={report.users_children}\r\n            suffix={`/ ${report.users}`}\r\n          />\r\n        </Card>\r\n      </Col>\r\n      <Col span={12}>\r\n        <Card>\r\n          <Statistic\r\n            title=\"Зданий в управлении\"\r\n            value={report.buildings_management}\r\n          />\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { Row, Col, Card, Statistic, Divider } from \"antd\";\r\n\r\nexport const StatsFinancial = ({ report }) => (\r\n  <div className=\"app-stats-block\">\r\n    <Divider>\r\n      <h3>Финансовая информация (в тыс. руб.) </h3>\r\n    </Divider>\r\n    <Row gutter={20}>\r\n      <Col span={8}>\r\n        <Card>\r\n          <Statistic\r\n            title=\"Израсходовано средств\"\r\n            value={report.funds_used}\r\n            suffix={`/ ${report.funds}`}\r\n          />\r\n        </Card>\r\n      </Col>\r\n      <Col span={8}>\r\n        <Card>\r\n          <Statistic\r\n            title=\"Средств получено / из бюджета\"\r\n            value={report.funds_acquisition}\r\n            suffix={`/ ${report.funds_budget}`}\r\n          />\r\n        </Card>\r\n      </Col>\r\n      <Col span={8}>\r\n        <Card>\r\n          <Statistic\r\n            title=\"По виду деятельности\"\r\n            value={report.funds_entrepreneurial}\r\n            suffix={`/ ${report[\"funds_main_activity,_thousand_rubles\"]}`}\r\n          />\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { Row, Card, Statistic, Divider } from \"antd\";\r\n\r\nexport const StatsCopying = ({ report }) => (\r\n  <div className=\"app-stats-block\">\r\n    <Divider>\r\n      <h3> Услуги копирования </h3>\r\n    </Divider>\r\n    <Row>\r\n      <Card bodyStyle={{ display: \"flex\", textAlign: \"center\" }}>\r\n        <Statistic\r\n          style={{ width: \"33%\" }}\r\n          title=\"Копий\"\r\n          value={report.copies}\r\n          suffix={`/ ${report.copies_issued}`}\r\n        />\r\n        <Divider type=\"vertical\" style={{ height: \"auto\" }} />\r\n        <Statistic\r\n          style={{ width: \"33%\" }}\r\n          title=\"В т.ч. детям\"\r\n          value={report.copies_issued_children}\r\n        />\r\n        <Divider type=\"vertical\" style={{ height: \"auto\" }} />\r\n        <Statistic\r\n          style={{ width: \"33%\" }}\r\n          title=\"Электронно\"\r\n          value={report.copies_electronic}\r\n        />\r\n      </Card>\r\n    </Row>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Breadcrumbs } from \"./Report/Breadcrumbs\";\r\nimport { Description } from \"./Report/Description\";\r\nimport { StatsPeople } from \"./Report/StatsPeople\";\r\nimport { StatsFinancial } from \"./Report/StatsFinancial\";\r\nimport { StatsCopying } from \"./Report/StatsCopying\";\r\n\r\nexport default function Report() {\r\n  const { id } = useParams();\r\n\r\n  const report = useSelector((state) =>\r\n    state.reports.items.find((item) => item.kopuk === id)\r\n  );\r\n  return report ? (\r\n    <div>\r\n      <Breadcrumbs report={report} />\r\n      <Description report={report} />\r\n      <StatsPeople report={report} />\r\n      <StatsFinancial report={report} />\r\n      <StatsCopying report={report} />\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <h2>Данные по организации не найдены</h2>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Table, Input, Divider } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setFilter } from \"redux/actions\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\n\r\nexport default function Reports(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const columns = [\r\n    {\r\n      title: (\r\n        <Input\r\n          prefix={<SearchOutlined />}\r\n          type=\"text\"\r\n          onChange={(e) => dispatch(setFilter(e.target.value))}\r\n          placeholder=\"Регион...\"\r\n        />\r\n      ),\r\n      dataIndex: \"territory\",\r\n      key: \"name\",\r\n      render: (text, record) => (\r\n        <Link to={`/reports/${record.kopuk}`}>{text}</Link>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Количество библиотек\",\r\n      dataIndex: \"libraries\",\r\n      key: \"count\",\r\n      render: (text) => text,\r\n      defaultSortOrder: \"descend\",\r\n      sorter: (a, b) => a.libraries - b.libraries,\r\n      width: \"30%\",\r\n      align: \"right\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Divider>\r\n        <h1>Данные по регионам</h1>\r\n      </Divider>\r\n      <Table bordered\r\n        size=\"middle\"\r\n        pagination={{\r\n          pageSizeOptions: [\"10\", \"50\", \"100\"],\r\n          showSizeChanger: true,\r\n          showTotal: (total) => `Всего: ${total} `,\r\n        }}\r\n        columns={columns}\r\n        dataSource={props.reports}\r\n        rowKey={\"kopuk\"}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { Layout, Spin } from \"antd\";\r\n\r\nimport \"./app.css\";\r\nimport { fetchReportsIfNeeded } from \"./redux/actions\";\r\nimport { AppHeader } from \"components/Header\";\r\nimport { AppFooter } from \"components/Footer\";\r\nimport Report from \"components/Report\";\r\nimport Reports from \"components/ReportsTable\";\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchReportsIfNeeded());\r\n  }, [dispatch]);\r\n\r\n  const isFetching = useSelector((state) => state.reports.isFetching);\r\n  const reports = useSelector((state) =>\r\n    state.reports.items.filter(\r\n      (i) => i.territory.toLowerCase().indexOf(state.filter) > -1\r\n    )\r\n  );\r\n\r\n  const { Content } = Layout;\r\n\r\n  return (\r\n    <Layout>\r\n      <AppHeader />\r\n      <Content className=\"app-content\">\r\n        {isFetching ? (\r\n          <Spin size=\"large\" style={{ width: \"100%\" }} />\r\n        ) : (\r\n          <Switch>\r\n            <Route exact path=\"/\" children={<Reports reports={reports} />} />\r\n            <Route path=\"/reports/:id\" children={<Report />} />\r\n          </Switch>\r\n        )}\r\n      </Content>\r\n      <AppFooter />\r\n    </Layout>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { RECEIVE_REPORTS, REGION_FILTER, REQUEST_REPORTS } from \"./actions\";\r\n\r\nfunction reports(\r\n  state = {\r\n    isFetching: false,\r\n    items: [],\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case REQUEST_REPORTS:\r\n      return Object.assign({}, state, {\r\n        isFetching: true,\r\n      });\r\n    case RECEIVE_REPORTS:\r\n      return Object.assign({}, state, {\r\n        isFetching: false,\r\n        items: action.reports,\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction filter(state = \"\", action) {\r\n  switch (action.type) {\r\n    case REGION_FILTER:\r\n      return action.filter;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  reports,\r\n  filter,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigProvider } from 'antd';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport ruRU from 'antd/lib/locale-provider/ru_RU';\r\nimport App from './app';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'antd/dist/antd.css';\r\n// redux store\r\nimport configureStore from './redux/store';\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ConfigProvider locale={ruRU}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </ConfigProvider></Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default function configureStore(preloadedState) {\r\n  return createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    applyMiddleware(thunkMiddleware)\r\n  );\r\n}\r\n"],"sourceRoot":""}